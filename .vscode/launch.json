{
    // 使用 IntelliSense 了解相关属性。 
    // 悬停以查看现有属性的描述。
    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Server",
            "type": "cppdbg", //调试类型，除使用msvc进行调试外，均为该类型
            "request": "launch",
            "program": "${workspaceFolder}/build/src/${workspaceFolderBasename}.exe", //指定C/C++程序位置
            "args": [
                // "-h"
                "-l",
                "9090"
            ], //指定运行参数
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}", //指定工作目录
            "environment": [],
            "externalConsole": true,
            "MIMode": "gdb",
            "osx": { //macOS的特定配置
                // "miDebuggerPath": "/Applications/Xcode.app/Contents/ Developer/usr/bin/lldb-mi", //修改使用的lldb-mi，一般不需要修改
                "MIMode": "lldb" //指定使用lldb进行调试
            },
            "linux": { //linux的特定配置
                "MIMode": "gdb", //指定使用gdb调试
                "setupCommands": [
                    {
                        "description": "Enable pretty-printing for gdb",
                        "text": "-enable-pretty-printing",
                        "ignoreFailures": true
                    }
                ]
            },
        },
        {
            "name": "Client1",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/build/src/${workspaceFolderBasename}.exe",
            "args": [
                "-c",
                "localhost:9090",
                "-u",
                "player1"
            ],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": true,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "Client2",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/build/src/${workspaceFolderBasename}.exe",
            "args": [
                "-c",
                "localhost:9090",
                "-u",
                "player2"
            ],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": true,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "Client3",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/build/src/${workspaceFolderBasename}.exe",
            "args": [
                "-c",
                "localhost:9090",
                "-u",
                "player3"
            ],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": true,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "Build and Debug", //名称
            "type": "cppdbg", //调试类型，除使用msvc进行调试外，均为该类型
            "request": "launch",
            "program": "${workspaceFolder}/build/src/${workspaceFolderBasename}.exe", //指定C/C++程序位置
            "args": [
                "-l",
                "9090"
            ], //指定运行参数
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}", //指定工作目录
            "preLaunchTask": "build", //在调试前会先调用build_debug这个task编译构建程序
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "osx": { //macOS的特定配置
                // "miDebuggerPath": "/Applications/Xcode.app/Contents/ Developer/usr/bin/lldb-mi", //修改使用的lldb-mi，一般不需要修改
                "MIMode": "lldb" //指定使用lldb进行调试
            },
            "linux": { //linux的特定配置
                "MIMode": "gdb", //指定使用gdb调试
                "setupCommands": [
                    {
                        "description": "Enable pretty-printing for gdb",
                        "text": "-enable-pretty-printing",
                        "ignoreFailures": true
                    }
                ]
            },
        },
        {
            "name": "TEST",
            "type": "cppdbg", //调试类型，除使用msvc进行调试外，均为该类型
            "request": "launch",
            "program": "${workspaceFolder}/build/src/${workspaceFolderBasename}.exe", //指定C/C++程序位置
            "args": [
                "-t",
                "-l",
                "9090"
            ], //指定运行参数
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}", //指定工作目录
            "environment": [],
            "externalConsole": true,
            "MIMode": "gdb",
            "osx": { //macOS的特定配置
                // "miDebuggerPath": "/Applications/Xcode.app/Contents/ Developer/usr/bin/lldb-mi", //修改使用的lldb-mi，一般不需要修改
                "MIMode": "lldb" //指定使用lldb进行调试
            },
            "linux": { //linux的特定配置
                "MIMode": "gdb", //指定使用gdb调试
                "setupCommands": [
                    {
                        "description": "Enable pretty-printing for gdb",
                        "text": "-enable-pretty-printing",
                        "ignoreFailures": true
                    }
                ]
            },
        }
    ],
    "compounds": [
        {
            "name": "Server/Client1/Client2/Client3",
            "configurations": [
                "Server",
                "Client1",
                "Client2",
                "Client3",
            ],
            //"preLaunchTask": "${defaultBuildTask}"
        }
    ]
}